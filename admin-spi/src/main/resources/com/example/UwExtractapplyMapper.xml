<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hmsh.app.dao.user.UwExtractapplyMapper">
  <resultMap id="BaseResultMap" type="com.hmsh.app.vo.user.UwExtractapply">
    <id column="dmId" jdbcType="BIGINT" property="dmid" />
    <result column="sourceType" jdbcType="SMALLINT" property="sourcetype" />
    <result column="applyTime" jdbcType="TIMESTAMP" property="applytime" />
    <result column="userId" jdbcType="BIGINT" property="userid" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="bankName" jdbcType="VARCHAR" property="bankname" />
    <result column="bankBranch" jdbcType="VARCHAR" property="bankbranch" />
    <result column="bankNo" jdbcType="VARCHAR" property="bankno" />
    <result column="cardholderName" jdbcType="VARCHAR" property="cardholdername" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="createBy" jdbcType="VARCHAR" property="createby" />
    <result column="createOn" jdbcType="BIGINT" property="createon" />
    <result column="dealBy" jdbcType="BIGINT" property="dealby" />
    <result column="dealOn" jdbcType="TIMESTAMP" property="dealon" />
    <result column="dealRemark" jdbcType="VARCHAR" property="dealremark" />
    <result column="updateBy" jdbcType="BIGINT" property="updateby" />
    <result column="updateOn" jdbcType="TIMESTAMP" property="updateon" />
    <result column="statisticsDate" jdbcType="TIMESTAMP" property="statisticsdate" />
    <result column="userType" jdbcType="TINYINT" property="usertype" />
    <result column="releaseDate" jdbcType="BIGINT" property="releasedate" />
    <result column="arrival_amount" jdbcType="DECIMAL" property="arrivalAmount" />
    <result column="tax_dedu_rate" jdbcType="DECIMAL" property="taxDeduRate" />
    <result column="tax_dedu_money" jdbcType="DECIMAL" property="taxDeduMoney" />
    <result column="single_source_id" jdbcType="BIGINT" property="singleSourceId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    dmId, sourceType, applyTime, userId, amount, bankName, bankBranch, bankNo, cardholderName, 
    status, createBy, createOn, dealBy, dealOn, dealRemark, updateBy, updateOn, statisticsDate, 
    userType, releaseDate, arrival_amount, tax_dedu_rate, tax_dedu_money, single_source_id, 
    remark
  </sql>
  <select id="selectByExample" parameterType="com.hmsh.app.vo.user.UwExtractapplyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from uw_extractapply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from uw_extractapply
    where dmId = #{dmid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from uw_extractapply
    where dmId = #{dmid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hmsh.app.vo.user.UwExtractapplyExample">
    delete from uw_extractapply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hmsh.app.vo.user.UwExtractapply">
    insert into uw_extractapply (dmId, sourceType, applyTime, 
      userId, amount, bankName, 
      bankBranch, bankNo, cardholderName, 
      status, createBy, createOn, 
      dealBy, dealOn, dealRemark, 
      updateBy, updateOn, statisticsDate, 
      userType, releaseDate, arrival_amount, 
      tax_dedu_rate, tax_dedu_money, single_source_id, 
      remark)
    values (#{dmid,jdbcType=BIGINT}, #{sourcetype,jdbcType=SMALLINT}, #{applytime,jdbcType=TIMESTAMP}, 
      #{userid,jdbcType=BIGINT}, #{amount,jdbcType=DECIMAL}, #{bankname,jdbcType=VARCHAR}, 
      #{bankbranch,jdbcType=VARCHAR}, #{bankno,jdbcType=VARCHAR}, #{cardholdername,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{createby,jdbcType=VARCHAR}, #{createon,jdbcType=BIGINT}, 
      #{dealby,jdbcType=BIGINT}, #{dealon,jdbcType=TIMESTAMP}, #{dealremark,jdbcType=VARCHAR}, 
      #{updateby,jdbcType=BIGINT}, #{updateon,jdbcType=TIMESTAMP}, #{statisticsdate,jdbcType=TIMESTAMP}, 
      #{usertype,jdbcType=TINYINT}, #{releasedate,jdbcType=BIGINT}, #{arrivalAmount,jdbcType=DECIMAL}, 
      #{taxDeduRate,jdbcType=DECIMAL}, #{taxDeduMoney,jdbcType=DECIMAL}, #{singleSourceId,jdbcType=BIGINT}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hmsh.app.vo.user.UwExtractapply">
    insert into uw_extractapply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="dmid != null">
        dmId,
      </if>
      <if test="sourcetype != null">
        sourceType,
      </if>
      <if test="applytime != null">
        applyTime,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="bankname != null">
        bankName,
      </if>
      <if test="bankbranch != null">
        bankBranch,
      </if>
      <if test="bankno != null">
        bankNo,
      </if>
      <if test="cardholdername != null">
        cardholderName,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createby != null">
        createBy,
      </if>
      <if test="createon != null">
        createOn,
      </if>
      <if test="dealby != null">
        dealBy,
      </if>
      <if test="dealon != null">
        dealOn,
      </if>
      <if test="dealremark != null">
        dealRemark,
      </if>
      <if test="updateby != null">
        updateBy,
      </if>
      <if test="updateon != null">
        updateOn,
      </if>
      <if test="statisticsdate != null">
        statisticsDate,
      </if>
      <if test="usertype != null">
        userType,
      </if>
      <if test="releasedate != null">
        releaseDate,
      </if>
      <if test="arrivalAmount != null">
        arrival_amount,
      </if>
      <if test="taxDeduRate != null">
        tax_dedu_rate,
      </if>
      <if test="taxDeduMoney != null">
        tax_dedu_money,
      </if>
      <if test="singleSourceId != null">
        single_source_id,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="dmid != null">
        #{dmid,jdbcType=BIGINT},
      </if>
      <if test="sourcetype != null">
        #{sourcetype,jdbcType=SMALLINT},
      </if>
      <if test="applytime != null">
        #{applytime,jdbcType=TIMESTAMP},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="bankname != null">
        #{bankname,jdbcType=VARCHAR},
      </if>
      <if test="bankbranch != null">
        #{bankbranch,jdbcType=VARCHAR},
      </if>
      <if test="bankno != null">
        #{bankno,jdbcType=VARCHAR},
      </if>
      <if test="cardholdername != null">
        #{cardholdername,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createby != null">
        #{createby,jdbcType=VARCHAR},
      </if>
      <if test="createon != null">
        #{createon,jdbcType=BIGINT},
      </if>
      <if test="dealby != null">
        #{dealby,jdbcType=BIGINT},
      </if>
      <if test="dealon != null">
        #{dealon,jdbcType=TIMESTAMP},
      </if>
      <if test="dealremark != null">
        #{dealremark,jdbcType=VARCHAR},
      </if>
      <if test="updateby != null">
        #{updateby,jdbcType=BIGINT},
      </if>
      <if test="updateon != null">
        #{updateon,jdbcType=TIMESTAMP},
      </if>
      <if test="statisticsdate != null">
        #{statisticsdate,jdbcType=TIMESTAMP},
      </if>
      <if test="usertype != null">
        #{usertype,jdbcType=TINYINT},
      </if>
      <if test="releasedate != null">
        #{releasedate,jdbcType=BIGINT},
      </if>
      <if test="arrivalAmount != null">
        #{arrivalAmount,jdbcType=DECIMAL},
      </if>
      <if test="taxDeduRate != null">
        #{taxDeduRate,jdbcType=DECIMAL},
      </if>
      <if test="taxDeduMoney != null">
        #{taxDeduMoney,jdbcType=DECIMAL},
      </if>
      <if test="singleSourceId != null">
        #{singleSourceId,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hmsh.app.vo.user.UwExtractapplyExample" resultType="java.lang.Long">
    select count(*) from uw_extractapply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update uw_extractapply
    <set>
      <if test="record.dmid != null">
        dmId = #{record.dmid,jdbcType=BIGINT},
      </if>
      <if test="record.sourcetype != null">
        sourceType = #{record.sourcetype,jdbcType=SMALLINT},
      </if>
      <if test="record.applytime != null">
        applyTime = #{record.applytime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=BIGINT},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.bankname != null">
        bankName = #{record.bankname,jdbcType=VARCHAR},
      </if>
      <if test="record.bankbranch != null">
        bankBranch = #{record.bankbranch,jdbcType=VARCHAR},
      </if>
      <if test="record.bankno != null">
        bankNo = #{record.bankno,jdbcType=VARCHAR},
      </if>
      <if test="record.cardholdername != null">
        cardholderName = #{record.cardholdername,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createby != null">
        createBy = #{record.createby,jdbcType=VARCHAR},
      </if>
      <if test="record.createon != null">
        createOn = #{record.createon,jdbcType=BIGINT},
      </if>
      <if test="record.dealby != null">
        dealBy = #{record.dealby,jdbcType=BIGINT},
      </if>
      <if test="record.dealon != null">
        dealOn = #{record.dealon,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dealremark != null">
        dealRemark = #{record.dealremark,jdbcType=VARCHAR},
      </if>
      <if test="record.updateby != null">
        updateBy = #{record.updateby,jdbcType=BIGINT},
      </if>
      <if test="record.updateon != null">
        updateOn = #{record.updateon,jdbcType=TIMESTAMP},
      </if>
      <if test="record.statisticsdate != null">
        statisticsDate = #{record.statisticsdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.usertype != null">
        userType = #{record.usertype,jdbcType=TINYINT},
      </if>
      <if test="record.releasedate != null">
        releaseDate = #{record.releasedate,jdbcType=BIGINT},
      </if>
      <if test="record.arrivalAmount != null">
        arrival_amount = #{record.arrivalAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.taxDeduRate != null">
        tax_dedu_rate = #{record.taxDeduRate,jdbcType=DECIMAL},
      </if>
      <if test="record.taxDeduMoney != null">
        tax_dedu_money = #{record.taxDeduMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.singleSourceId != null">
        single_source_id = #{record.singleSourceId,jdbcType=BIGINT},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update uw_extractapply
    set dmId = #{record.dmid,jdbcType=BIGINT},
      sourceType = #{record.sourcetype,jdbcType=SMALLINT},
      applyTime = #{record.applytime,jdbcType=TIMESTAMP},
      userId = #{record.userid,jdbcType=BIGINT},
      amount = #{record.amount,jdbcType=DECIMAL},
      bankName = #{record.bankname,jdbcType=VARCHAR},
      bankBranch = #{record.bankbranch,jdbcType=VARCHAR},
      bankNo = #{record.bankno,jdbcType=VARCHAR},
      cardholderName = #{record.cardholdername,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      createBy = #{record.createby,jdbcType=VARCHAR},
      createOn = #{record.createon,jdbcType=BIGINT},
      dealBy = #{record.dealby,jdbcType=BIGINT},
      dealOn = #{record.dealon,jdbcType=TIMESTAMP},
      dealRemark = #{record.dealremark,jdbcType=VARCHAR},
      updateBy = #{record.updateby,jdbcType=BIGINT},
      updateOn = #{record.updateon,jdbcType=TIMESTAMP},
      statisticsDate = #{record.statisticsdate,jdbcType=TIMESTAMP},
      userType = #{record.usertype,jdbcType=TINYINT},
      releaseDate = #{record.releasedate,jdbcType=BIGINT},
      arrival_amount = #{record.arrivalAmount,jdbcType=DECIMAL},
      tax_dedu_rate = #{record.taxDeduRate,jdbcType=DECIMAL},
      tax_dedu_money = #{record.taxDeduMoney,jdbcType=DECIMAL},
      single_source_id = #{record.singleSourceId,jdbcType=BIGINT},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hmsh.app.vo.user.UwExtractapply">
    update uw_extractapply
    <set>
      <if test="sourcetype != null">
        sourceType = #{sourcetype,jdbcType=SMALLINT},
      </if>
      <if test="applytime != null">
        applyTime = #{applytime,jdbcType=TIMESTAMP},
      </if>
      <if test="userid != null">
        userId = #{userid,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="bankname != null">
        bankName = #{bankname,jdbcType=VARCHAR},
      </if>
      <if test="bankbranch != null">
        bankBranch = #{bankbranch,jdbcType=VARCHAR},
      </if>
      <if test="bankno != null">
        bankNo = #{bankno,jdbcType=VARCHAR},
      </if>
      <if test="cardholdername != null">
        cardholderName = #{cardholdername,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createby != null">
        createBy = #{createby,jdbcType=VARCHAR},
      </if>
      <if test="createon != null">
        createOn = #{createon,jdbcType=BIGINT},
      </if>
      <if test="dealby != null">
        dealBy = #{dealby,jdbcType=BIGINT},
      </if>
      <if test="dealon != null">
        dealOn = #{dealon,jdbcType=TIMESTAMP},
      </if>
      <if test="dealremark != null">
        dealRemark = #{dealremark,jdbcType=VARCHAR},
      </if>
      <if test="updateby != null">
        updateBy = #{updateby,jdbcType=BIGINT},
      </if>
      <if test="updateon != null">
        updateOn = #{updateon,jdbcType=TIMESTAMP},
      </if>
      <if test="statisticsdate != null">
        statisticsDate = #{statisticsdate,jdbcType=TIMESTAMP},
      </if>
      <if test="usertype != null">
        userType = #{usertype,jdbcType=TINYINT},
      </if>
      <if test="releasedate != null">
        releaseDate = #{releasedate,jdbcType=BIGINT},
      </if>
      <if test="arrivalAmount != null">
        arrival_amount = #{arrivalAmount,jdbcType=DECIMAL},
      </if>
      <if test="taxDeduRate != null">
        tax_dedu_rate = #{taxDeduRate,jdbcType=DECIMAL},
      </if>
      <if test="taxDeduMoney != null">
        tax_dedu_money = #{taxDeduMoney,jdbcType=DECIMAL},
      </if>
      <if test="singleSourceId != null">
        single_source_id = #{singleSourceId,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where dmId = #{dmid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hmsh.app.vo.user.UwExtractapply">
    update uw_extractapply
    set sourceType = #{sourcetype,jdbcType=SMALLINT},
      applyTime = #{applytime,jdbcType=TIMESTAMP},
      userId = #{userid,jdbcType=BIGINT},
      amount = #{amount,jdbcType=DECIMAL},
      bankName = #{bankname,jdbcType=VARCHAR},
      bankBranch = #{bankbranch,jdbcType=VARCHAR},
      bankNo = #{bankno,jdbcType=VARCHAR},
      cardholderName = #{cardholdername,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      createBy = #{createby,jdbcType=VARCHAR},
      createOn = #{createon,jdbcType=BIGINT},
      dealBy = #{dealby,jdbcType=BIGINT},
      dealOn = #{dealon,jdbcType=TIMESTAMP},
      dealRemark = #{dealremark,jdbcType=VARCHAR},
      updateBy = #{updateby,jdbcType=BIGINT},
      updateOn = #{updateon,jdbcType=TIMESTAMP},
      statisticsDate = #{statisticsdate,jdbcType=TIMESTAMP},
      userType = #{usertype,jdbcType=TINYINT},
      releaseDate = #{releasedate,jdbcType=BIGINT},
      arrival_amount = #{arrivalAmount,jdbcType=DECIMAL},
      tax_dedu_rate = #{taxDeduRate,jdbcType=DECIMAL},
      tax_dedu_money = #{taxDeduMoney,jdbcType=DECIMAL},
      single_source_id = #{singleSourceId,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR}
    where dmId = #{dmid,jdbcType=BIGINT}
  </update>
</mapper>